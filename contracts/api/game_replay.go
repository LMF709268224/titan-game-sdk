// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// GameRoundInfo is an auto generated low-level Go binding around an user-defined struct.
type GameRoundInfo struct {
	GameID    string
	RoundID   string
	ReplayID  string
	PlayerIDs string
}

// GameRoundReplay is an auto generated low-level Go binding around an user-defined struct.
type GameRoundReplay struct {
	DomainSeparationTag int64
	VRFHeight           uint64
	HashFunc            string
	VRFProof            []byte
	Address             string
	ReplayCID           string
	GameInfo            GameRoundInfo
	GameResults         []GameRoundResult
}

// GameRoundResult is an auto generated low-level Go binding around an user-defined struct.
type GameRoundResult struct {
	PlayerID     string
	CurrentScore uint64
	WinScore     int64
}

// GameReplayContractMetaData contains all meta data concerning the GameReplayContract contract.
var GameReplayContractMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_replayID\",\"type\":\"string\"}],\"name\":\"getGameReplay\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"DomainSeparationTag\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"VRFHeight\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"HashFunc\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"VRFProof\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"Address\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ReplayCID\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"GameID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"RoundID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ReplayID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"PlayerIDs\",\"type\":\"string\"}],\"internalType\":\"structGameRound.Info\",\"name\":\"GameInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"PlayerID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"CurrentScore\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"WinScore\",\"type\":\"int64\"}],\"internalType\":\"structGameRound.Result[]\",\"name\":\"GameResults\",\"type\":\"tuple[]\"}],\"internalType\":\"structGameRound.Replay\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getGameReplayByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"DomainSeparationTag\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"VRFHeight\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"HashFunc\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"VRFProof\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"Address\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ReplayCID\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"GameID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"RoundID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ReplayID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"PlayerIDs\",\"type\":\"string\"}],\"internalType\":\"structGameRound.Info\",\"name\":\"GameInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"PlayerID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"CurrentScore\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"WinScore\",\"type\":\"int64\"}],\"internalType\":\"structGameRound.Result[]\",\"name\":\"GameResults\",\"type\":\"tuple[]\"}],\"internalType\":\"structGameRound.Replay\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGameReplayLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"DomainSeparationTag\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"VRFHeight\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"HashFunc\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"VRFProof\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"Address\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ReplayCID\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"GameID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"RoundID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ReplayID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"PlayerIDs\",\"type\":\"string\"}],\"internalType\":\"structGameRound.Info\",\"name\":\"GameInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"PlayerID\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"CurrentScore\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"WinScore\",\"type\":\"int64\"}],\"internalType\":\"structGameRound.Result[]\",\"name\":\"GameResults\",\"type\":\"tuple[]\"}],\"internalType\":\"structGameRound.Replay[]\",\"name\":\"_replays\",\"type\":\"tuple[]\"}],\"name\":\"saveGameReplay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405234801562000010575f80fd5b5062000031620000256200003760201b60201c565b6200003e60201b60201c565b620000ff565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6130ff806200010d5f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c8063c661696911610059578063c6616969146100d7578063e4175d2a146100f3578063eb05fd1d14610123578063f2fde38b146101415761007b565b8063715018a61461007f5780638da5cb5b14610089578063b9709948146100a7575b5f80fd5b61008761015d565b005b610091610170565b60405161009e919061188a565b60405180910390f35b6100c160048036038101906100bc91906119f0565b610197565b6040516100ce9190611d8d565b60405180910390f35b6100f160048036038101906100ec9190612338565b610857565b005b61010d600480360381019061010891906123b2565b6108ad565b60405161011a9190611d8d565b60405180910390f35b61012b611014565b60405161013891906123ec565b60405180910390f35b61015b6004803603810190610156919061242f565b611020565b005b6101656110a2565b61016e5f611120565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61019f6117cd565b5f6001836040516101b09190612494565b9081526020016040518091039020604051806101000160405290815f82015f9054906101000a900460070b60070b60070b81526020015f820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182018054610226906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610252906124d7565b801561029d5780601f106102745761010080835404028352916020019161029d565b820191905f5260205f20905b81548152906001019060200180831161028057829003601f168201915b505050505081526020016002820180546102b6906124d7565b80601f01602080910402602001604051908101604052809291908181526020018280546102e2906124d7565b801561032d5780601f106103045761010080835404028352916020019161032d565b820191905f5260205f20905b81548152906001019060200180831161031057829003601f168201915b50505050508152602001600382018054610346906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610372906124d7565b80156103bd5780601f10610394576101008083540402835291602001916103bd565b820191905f5260205f20905b8154815290600101906020018083116103a057829003601f168201915b505050505081526020016004820180546103d6906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610402906124d7565b801561044d5780601f106104245761010080835404028352916020019161044d565b820191905f5260205f20905b81548152906001019060200180831161043057829003601f168201915b50505050508152602001600582016040518060800160405290815f82018054610475906124d7565b80601f01602080910402602001604051908101604052809291908181526020018280546104a1906124d7565b80156104ec5780601f106104c3576101008083540402835291602001916104ec565b820191905f5260205f20905b8154815290600101906020018083116104cf57829003601f168201915b50505050508152602001600182018054610505906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610531906124d7565b801561057c5780601f106105535761010080835404028352916020019161057c565b820191905f5260205f20905b81548152906001019060200180831161055f57829003601f168201915b50505050508152602001600282018054610595906124d7565b80601f01602080910402602001604051908101604052809291908181526020018280546105c1906124d7565b801561060c5780601f106105e35761010080835404028352916020019161060c565b820191905f5260205f20905b8154815290600101906020018083116105ef57829003601f168201915b50505050508152602001600382018054610625906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610651906124d7565b801561069c5780601f106106735761010080835404028352916020019161069c565b820191905f5260205f20905b81548152906001019060200180831161067f57829003601f168201915b505050505081525050815260200160098201805480602002602001604051908101604052809291908181526020015f905b828210156107da578382905f5260205f2090600202016040518060600160405290815f820180546106fd906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610729906124d7565b80156107745780601f1061074b57610100808354040283529160200191610774565b820191905f5260205f20905b81548152906001019060200180831161075757829003601f168201915b50505050508152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900460070b60070b60070b81525050815260200190600101906106cd565b505050508152505090505f81606001515111836040516020016107fd9190612551565b6040516020818303038152906040529061084d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084491906125ba565b60405180910390fd5b5080915050919050565b61085f6110a2565b610868816111e1565b5f5b81518110156108a957610896828281518110610889576108886125da565b5b6020026020010151611269565b80806108a190612634565b91505061086a565b5050565b6108b56117cd565b8160028054905011826040516020016108ce91906126e5565b6040516020818303038152906040529061091e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091591906125ba565b60405180910390fd5b505f60028381548110610934576109336125da565b5b905f5260205f20018054610947906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610973906124d7565b80156109be5780601f10610995576101008083540402835291602001916109be565b820191905f5260205f20905b8154815290600101906020018083116109a157829003601f168201915b505050505090505f6001826040516109d69190612494565b9081526020016040518091039020604051806101000160405290815f82015f9054906101000a900460070b60070b60070b81526020015f820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001600182018054610a4c906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610a78906124d7565b8015610ac35780601f10610a9a57610100808354040283529160200191610ac3565b820191905f5260205f20905b815481529060010190602001808311610aa657829003601f168201915b50505050508152602001600282018054610adc906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610b08906124d7565b8015610b535780601f10610b2a57610100808354040283529160200191610b53565b820191905f5260205f20905b815481529060010190602001808311610b3657829003601f168201915b50505050508152602001600382018054610b6c906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610b98906124d7565b8015610be35780601f10610bba57610100808354040283529160200191610be3565b820191905f5260205f20905b815481529060010190602001808311610bc657829003601f168201915b50505050508152602001600482018054610bfc906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c28906124d7565b8015610c735780601f10610c4a57610100808354040283529160200191610c73565b820191905f5260205f20905b815481529060010190602001808311610c5657829003601f168201915b50505050508152602001600582016040518060800160405290815f82018054610c9b906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc7906124d7565b8015610d125780601f10610ce957610100808354040283529160200191610d12565b820191905f5260205f20905b815481529060010190602001808311610cf557829003601f168201915b50505050508152602001600182018054610d2b906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610d57906124d7565b8015610da25780601f10610d7957610100808354040283529160200191610da2565b820191905f5260205f20905b815481529060010190602001808311610d8557829003601f168201915b50505050508152602001600282018054610dbb906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610de7906124d7565b8015610e325780601f10610e0957610100808354040283529160200191610e32565b820191905f5260205f20905b815481529060010190602001808311610e1557829003601f168201915b50505050508152602001600382018054610e4b906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e77906124d7565b8015610ec25780601f10610e9957610100808354040283529160200191610ec2565b820191905f5260205f20905b815481529060010190602001808311610ea557829003601f168201915b505050505081525050815260200160098201805480602002602001604051908101604052809291908181526020015f905b82821015611000578382905f5260205f2090600202016040518060600160405290815f82018054610f23906124d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4f906124d7565b8015610f9a5780601f10610f7157610100808354040283529160200191610f9a565b820191905f5260205f20905b815481529060010190602001808311610f7d57829003601f168201915b50505050508152602001600182015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900460070b60070b60070b8152505081526020019060010190610ef3565b505050508152505090508092505050919050565b5f600280549050905090565b6110286110a2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108d9061277a565b60405180910390fd5b61109f81611120565b50565b6110aa6114e4565b73ffffffffffffffffffffffffffffffffffffffff166110c8610170565b73ffffffffffffffffffffffffffffffffffffffff161461111e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611115906127e2565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f815111611224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121b9061284a565b60405180910390fd5b5f5b815181101561126557611252828281518110611245576112446125da565b5b60200260200101516114eb565b808061125d90612634565b915050611226565b5050565b5f60018260c00151604001516040516112829190612494565b908152602001604051809103902090505f8160050160020180546112a5906124d7565b9050036112e75760028260c0015160400151908060018154018082558091505060019003905f5260205f20015f9091909190915090816112e59190612a05565b505b815f0151815f015f6101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff1602179055508160200151815f0160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555081604001518160010190816113599190612a05565b50816060015181600201908161136f9190612b2c565b5081608001518160030190816113859190612a05565b508160a0015181600401908161139b9190612a05565b508160c00151816005015f820151815f0190816113b89190612a05565b5060208201518160010190816113ce9190612a05565b5060408201518160020190816113e49190612a05565b5060608201518160030190816113fa9190612a05565b509050505f5b8260e00151518110156114df57816009018360e001518281518110611428576114276125da565b5b6020026020010151908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f0190816114699190612a05565b506020820151816001015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548167ffffffffffffffff021916908360070b67ffffffffffffffff160217905550505080806114d790612634565b915050611400565b505050565b5f33905090565b5f815f015160070b13611533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152a90612c6b565b60405180910390fd5b5f816020015167ffffffffffffffff1611611583576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157a90612cd3565b60405180910390fd5b5f816040015151116115ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c190612d3b565b60405180910390fd5b5f81606001515111611611576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160890612da3565b60405180910390fd5b5f81608001515111611658576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164f90612e0b565b60405180910390fd5b5f8160a00151511161169f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169690612e73565b60405180910390fd5b5f8160c001515f015151116116e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e090612f01565b60405180910390fd5b5f8160c00151606001515111611734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172b90612f8f565b60405180910390fd5b5f8160c0015160400151511161177f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117769061301d565b60405180910390fd5b5f8160c001516020015151116117ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c1906130ab565b60405180910390fd5b50565b6040518061010001604052805f60070b81526020015f67ffffffffffffffff16815260200160608152602001606081526020016060815260200160608152602001611816611823565b8152602001606081525090565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6118748261184b565b9050919050565b6118848161186a565b82525050565b5f60208201905061189d5f83018461187b565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611902826118bc565b810181811067ffffffffffffffff82111715611921576119206118cc565b5b80604052505050565b5f6119336118a3565b905061193f82826118f9565b919050565b5f67ffffffffffffffff82111561195e5761195d6118cc565b5b611967826118bc565b9050602081019050919050565b828183375f83830152505050565b5f61199461198f84611944565b61192a565b9050828152602081018484840111156119b0576119af6118b8565b5b6119bb848285611974565b509392505050565b5f82601f8301126119d7576119d66118b4565b5b81356119e7848260208601611982565b91505092915050565b5f60208284031215611a0557611a046118ac565b5b5f82013567ffffffffffffffff811115611a2257611a216118b0565b5b611a2e848285016119c3565b91505092915050565b5f8160070b9050919050565b611a4c81611a37565b82525050565b5f67ffffffffffffffff82169050919050565b611a6e81611a52565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611aab578082015181840152602081019050611a90565b5f8484015250505050565b5f611ac082611a74565b611aca8185611a7e565b9350611ada818560208601611a8e565b611ae3816118bc565b840191505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f611b1282611aee565b611b1c8185611af8565b9350611b2c818560208601611a8e565b611b35816118bc565b840191505092915050565b5f608083015f8301518482035f860152611b5a8282611ab6565b91505060208301518482036020860152611b748282611ab6565b91505060408301518482036040860152611b8e8282611ab6565b91505060608301518482036060860152611ba88282611ab6565b9150508091505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f606083015f8301518482035f860152611bf88282611ab6565b9150506020830151611c0d6020860182611a65565b506040830151611c206040860182611a43565b508091505092915050565b5f611c368383611bde565b905092915050565b5f602082019050919050565b5f611c5482611bb5565b611c5e8185611bbf565b935083602082028501611c7085611bcf565b805f5b85811015611cab5784840389528151611c8c8582611c2b565b9450611c9783611c3e565b925060208a01995050600181019050611c73565b50829750879550505050505092915050565b5f61010083015f830151611cd35f860182611a43565b506020830151611ce66020860182611a65565b5060408301518482036040860152611cfe8282611ab6565b91505060608301518482036060860152611d188282611b08565b91505060808301518482036080860152611d328282611ab6565b91505060a083015184820360a0860152611d4c8282611ab6565b91505060c083015184820360c0860152611d668282611b40565b91505060e083015184820360e0860152611d808282611c4a565b9150508091505092915050565b5f6020820190508181035f830152611da58184611cbd565b905092915050565b5f67ffffffffffffffff821115611dc757611dc66118cc565b5b602082029050602081019050919050565b5f80fd5b5f80fd5b5f80fd5b611ded81611a37565b8114611df7575f80fd5b50565b5f81359050611e0881611de4565b92915050565b611e1781611a52565b8114611e21575f80fd5b50565b5f81359050611e3281611e0e565b92915050565b5f67ffffffffffffffff821115611e5257611e516118cc565b5b611e5b826118bc565b9050602081019050919050565b5f611e7a611e7584611e38565b61192a565b905082815260208101848484011115611e9657611e956118b8565b5b611ea1848285611974565b509392505050565b5f82601f830112611ebd57611ebc6118b4565b5b8135611ecd848260208601611e68565b91505092915050565b5f60808284031215611eeb57611eea611ddc565b5b611ef5608061192a565b90505f82013567ffffffffffffffff811115611f1457611f13611de0565b5b611f20848285016119c3565b5f83015250602082013567ffffffffffffffff811115611f4357611f42611de0565b5b611f4f848285016119c3565b602083015250604082013567ffffffffffffffff811115611f7357611f72611de0565b5b611f7f848285016119c3565b604083015250606082013567ffffffffffffffff811115611fa357611fa2611de0565b5b611faf848285016119c3565b60608301525092915050565b5f67ffffffffffffffff821115611fd557611fd46118cc565b5b602082029050602081019050919050565b5f60608284031215611ffb57611ffa611ddc565b5b612005606061192a565b90505f82013567ffffffffffffffff81111561202457612023611de0565b5b612030848285016119c3565b5f83015250602061204384828501611e24565b602083015250604061205784828501611dfa565b60408301525092915050565b5f61207561207084611fbb565b61192a565b9050808382526020820190506020840283018581111561209857612097611dd8565b5b835b818110156120df57803567ffffffffffffffff8111156120bd576120bc6118b4565b5b8086016120ca8982611fe6565b8552602085019450505060208101905061209a565b5050509392505050565b5f82601f8301126120fd576120fc6118b4565b5b813561210d848260208601612063565b91505092915050565b5f610100828403121561212c5761212b611ddc565b5b61213761010061192a565b90505f61214684828501611dfa565b5f83015250602061215984828501611e24565b602083015250604082013567ffffffffffffffff81111561217d5761217c611de0565b5b612189848285016119c3565b604083015250606082013567ffffffffffffffff8111156121ad576121ac611de0565b5b6121b984828501611ea9565b606083015250608082013567ffffffffffffffff8111156121dd576121dc611de0565b5b6121e9848285016119c3565b60808301525060a082013567ffffffffffffffff81111561220d5761220c611de0565b5b612219848285016119c3565b60a08301525060c082013567ffffffffffffffff81111561223d5761223c611de0565b5b61224984828501611ed6565b60c08301525060e082013567ffffffffffffffff81111561226d5761226c611de0565b5b612279848285016120e9565b60e08301525092915050565b5f61229761229284611dad565b61192a565b905080838252602082019050602084028301858111156122ba576122b9611dd8565b5b835b8181101561230157803567ffffffffffffffff8111156122df576122de6118b4565b5b8086016122ec8982612116565b855260208501945050506020810190506122bc565b5050509392505050565b5f82601f83011261231f5761231e6118b4565b5b813561232f848260208601612285565b91505092915050565b5f6020828403121561234d5761234c6118ac565b5b5f82013567ffffffffffffffff81111561236a576123696118b0565b5b6123768482850161230b565b91505092915050565b5f819050919050565b6123918161237f565b811461239b575f80fd5b50565b5f813590506123ac81612388565b92915050565b5f602082840312156123c7576123c66118ac565b5b5f6123d48482850161239e565b91505092915050565b6123e68161237f565b82525050565b5f6020820190506123ff5f8301846123dd565b92915050565b61240e8161186a565b8114612418575f80fd5b50565b5f8135905061242981612405565b92915050565b5f60208284031215612444576124436118ac565b5b5f6124518482850161241b565b91505092915050565b5f81905092915050565b5f61246e82611a74565b612478818561245a565b9350612488818560208601611a8e565b80840191505092915050565b5f61249f8284612464565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806124ee57607f821691505b602082108103612501576125006124aa565b5b50919050565b7f47616d65207265706c6179206e6f7420666f756e643a200000000000000000005f82015250565b5f61253b60178361245a565b915061254682612507565b601782019050919050565b5f61255b8261252f565b91506125678284612464565b915081905092915050565b5f82825260208201905092915050565b5f61258c82611a74565b6125968185612572565b93506125a6818560208601611a8e565b6125af816118bc565b840191505092915050565b5f6020820190508181035f8301526125d28184612582565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61263e8261237f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126705761266f612607565b5b600182019050919050565b7f6f7574206f662072616e67653a200000000000000000000000000000000000005f82015250565b5f6126af600e8361245a565b91506126ba8261267b565b600e82019050919050565b5f819050919050565b6126df6126da8261237f565b6126c5565b82525050565b5f6126ef826126a3565b91506126fb82846126ce565b60208201915081905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f612764602683612572565b915061276f8261270a565b604082019050919050565b5f6020820190508181035f83015261279181612758565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6127cc602083612572565b91506127d782612798565b602082019050919050565b5f6020820190508181035f8301526127f9816127c0565b9050919050565b7f5f7265706c6179732063616e206e6f7420656d707479000000000000000000005f82015250565b5f612834601683612572565b915061283f82612800565b602082019050919050565b5f6020820190508181035f83015261286181612828565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026128c47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612889565b6128ce8683612889565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6129096129046128ff8461237f565b6128e6565b61237f565b9050919050565b5f819050919050565b612922836128ef565b61293661292e82612910565b848454612895565b825550505050565b5f90565b61294a61293e565b612955818484612919565b505050565b5b818110156129785761296d5f82612942565b60018101905061295b565b5050565b601f8211156129bd5761298e81612868565b6129978461287a565b810160208510156129a6578190505b6129ba6129b28561287a565b83018261295a565b50505b505050565b5f82821c905092915050565b5f6129dd5f19846008026129c2565b1980831691505092915050565b5f6129f583836129ce565b9150826002028217905092915050565b612a0e82611a74565b67ffffffffffffffff811115612a2757612a266118cc565b5b612a3182546124d7565b612a3c82828561297c565b5f60209050601f831160018114612a6d575f8415612a5b578287015190505b612a6585826129ea565b865550612acc565b601f198416612a7b86612868565b5f5b82811015612aa257848901518255600182019150602085019450602081019050612a7d565b86831015612abf5784890151612abb601f8916826129ce565b8355505b6001600288020188555050505b505050505050565b5f819050815f5260205f209050919050565b601f821115612b2757612af881612ad4565b612b018461287a565b81016020851015612b10578190505b612b24612b1c8561287a565b83018261295a565b50505b505050565b612b3582611aee565b67ffffffffffffffff811115612b4e57612b4d6118cc565b5b612b5882546124d7565b612b63828285612ae6565b5f60209050601f831160018114612b94575f8415612b82578287015190505b612b8c85826129ea565b865550612bf3565b601f198416612ba286612ad4565b5f5b82811015612bc957848901518255600182019150602085019450602081019050612ba4565b86831015612be65784890151612be2601f8916826129ce565b8355505b6001600288020188555050505b505050505050565b7f5265706c61792e446f6d61696e53657061726174696f6e5461672063616e206e5f8201527f6f74203000000000000000000000000000000000000000000000000000000000602082015250565b5f612c55602483612572565b9150612c6082612bfb565b604082019050919050565b5f6020820190508181035f830152612c8281612c49565b9050919050565b7f5265706c61792e5652464865696768742063616e206e6f7420300000000000005f82015250565b5f612cbd601a83612572565b9150612cc882612c89565b602082019050919050565b5f6020820190508181035f830152612cea81612cb1565b9050919050565b7f5265706c61792e4861736846756e632063616e206e6f7420656d7074790000005f82015250565b5f612d25601d83612572565b9150612d3082612cf1565b602082019050919050565b5f6020820190508181035f830152612d5281612d19565b9050919050565b7f5265706c61792e56524650726f6f662063616e206e6f7420656d7074790000005f82015250565b5f612d8d601d83612572565b9150612d9882612d59565b602082019050919050565b5f6020820190508181035f830152612dba81612d81565b9050919050565b7f5265706c61792e416464726573732063616e206e6f7420656d707479000000005f82015250565b5f612df5601c83612572565b9150612e0082612dc1565b602082019050919050565b5f6020820190508181035f830152612e2281612de9565b9050919050565b7f5265706c61792e5265706c61794349442063616e206e6f7420656d70747900005f82015250565b5f612e5d601e83612572565b9150612e6882612e29565b602082019050919050565b5f6020820190508181035f830152612e8a81612e51565b9050919050565b7f5265706c61792e47616d65496e666f2e47616d6549442063616e206e6f7420655f8201527f6d70747900000000000000000000000000000000000000000000000000000000602082015250565b5f612eeb602483612572565b9150612ef682612e91565b604082019050919050565b5f6020820190508181035f830152612f1881612edf565b9050919050565b7f5265706c61792e47616d65496e666f2e506c617965724944732063616e206e6f5f8201527f7420656d70747900000000000000000000000000000000000000000000000000602082015250565b5f612f79602783612572565b9150612f8482612f1f565b604082019050919050565b5f6020820190508181035f830152612fa681612f6d565b9050919050565b7f5265706c61792e47616d65496e666f2e5265706c617949442063616e206e6f745f8201527f20656d7074790000000000000000000000000000000000000000000000000000602082015250565b5f613007602683612572565b915061301282612fad565b604082019050919050565b5f6020820190508181035f83015261303481612ffb565b9050919050565b7f5265706c61792e47616d65496e666f2e526f756e6449442063616e206e6f74205f8201527f656d707479000000000000000000000000000000000000000000000000000000602082015250565b5f613095602583612572565b91506130a08261303b565b604082019050919050565b5f6020820190508181035f8301526130c281613089565b905091905056fea26469706673582212202aaf1e2edb48a8ede68a05f3dc7a2cb785df98e3d5d304494a17de0b2b8f81c364736f6c63430008150033",
}

// GameReplayContractABI is the input ABI used to generate the binding from.
// Deprecated: Use GameReplayContractMetaData.ABI instead.
var GameReplayContractABI = GameReplayContractMetaData.ABI

// GameReplayContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use GameReplayContractMetaData.Bin instead.
var GameReplayContractBin = GameReplayContractMetaData.Bin

// DeployGameReplayContract deploys a new Ethereum contract, binding an instance of GameReplayContract to it.
func DeployGameReplayContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *GameReplayContract, error) {
	parsed, err := GameReplayContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(GameReplayContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &GameReplayContract{GameReplayContractCaller: GameReplayContractCaller{contract: contract}, GameReplayContractTransactor: GameReplayContractTransactor{contract: contract}, GameReplayContractFilterer: GameReplayContractFilterer{contract: contract}}, nil
}

// GameReplayContract is an auto generated Go binding around an Ethereum contract.
type GameReplayContract struct {
	GameReplayContractCaller     // Read-only binding to the contract
	GameReplayContractTransactor // Write-only binding to the contract
	GameReplayContractFilterer   // Log filterer for contract events
}

// GameReplayContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type GameReplayContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GameReplayContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type GameReplayContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GameReplayContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type GameReplayContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GameReplayContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type GameReplayContractSession struct {
	Contract     *GameReplayContract // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// GameReplayContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type GameReplayContractCallerSession struct {
	Contract *GameReplayContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// GameReplayContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type GameReplayContractTransactorSession struct {
	Contract     *GameReplayContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// GameReplayContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type GameReplayContractRaw struct {
	Contract *GameReplayContract // Generic contract binding to access the raw methods on
}

// GameReplayContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type GameReplayContractCallerRaw struct {
	Contract *GameReplayContractCaller // Generic read-only contract binding to access the raw methods on
}

// GameReplayContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type GameReplayContractTransactorRaw struct {
	Contract *GameReplayContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewGameReplayContract creates a new instance of GameReplayContract, bound to a specific deployed contract.
func NewGameReplayContract(address common.Address, backend bind.ContractBackend) (*GameReplayContract, error) {
	contract, err := bindGameReplayContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &GameReplayContract{GameReplayContractCaller: GameReplayContractCaller{contract: contract}, GameReplayContractTransactor: GameReplayContractTransactor{contract: contract}, GameReplayContractFilterer: GameReplayContractFilterer{contract: contract}}, nil
}

// NewGameReplayContractCaller creates a new read-only instance of GameReplayContract, bound to a specific deployed contract.
func NewGameReplayContractCaller(address common.Address, caller bind.ContractCaller) (*GameReplayContractCaller, error) {
	contract, err := bindGameReplayContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &GameReplayContractCaller{contract: contract}, nil
}

// NewGameReplayContractTransactor creates a new write-only instance of GameReplayContract, bound to a specific deployed contract.
func NewGameReplayContractTransactor(address common.Address, transactor bind.ContractTransactor) (*GameReplayContractTransactor, error) {
	contract, err := bindGameReplayContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &GameReplayContractTransactor{contract: contract}, nil
}

// NewGameReplayContractFilterer creates a new log filterer instance of GameReplayContract, bound to a specific deployed contract.
func NewGameReplayContractFilterer(address common.Address, filterer bind.ContractFilterer) (*GameReplayContractFilterer, error) {
	contract, err := bindGameReplayContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &GameReplayContractFilterer{contract: contract}, nil
}

// bindGameReplayContract binds a generic wrapper to an already deployed contract.
func bindGameReplayContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := GameReplayContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_GameReplayContract *GameReplayContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _GameReplayContract.Contract.GameReplayContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_GameReplayContract *GameReplayContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _GameReplayContract.Contract.GameReplayContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_GameReplayContract *GameReplayContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _GameReplayContract.Contract.GameReplayContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_GameReplayContract *GameReplayContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _GameReplayContract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_GameReplayContract *GameReplayContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _GameReplayContract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_GameReplayContract *GameReplayContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _GameReplayContract.Contract.contract.Transact(opts, method, params...)
}

// GetGameReplay is a free data retrieval call binding the contract method 0xb9709948.
//
// Solidity: function getGameReplay(string _replayID) view returns((int64,uint64,string,bytes,string,string,(string,string,string,string),(string,uint64,int64)[]))
func (_GameReplayContract *GameReplayContractCaller) GetGameReplay(opts *bind.CallOpts, _replayID string) (GameRoundReplay, error) {
	var out []interface{}
	err := _GameReplayContract.contract.Call(opts, &out, "getGameReplay", _replayID)

	if err != nil {
		return *new(GameRoundReplay), err
	}

	out0 := *abi.ConvertType(out[0], new(GameRoundReplay)).(*GameRoundReplay)

	return out0, err

}

// GetGameReplay is a free data retrieval call binding the contract method 0xb9709948.
//
// Solidity: function getGameReplay(string _replayID) view returns((int64,uint64,string,bytes,string,string,(string,string,string,string),(string,uint64,int64)[]))
func (_GameReplayContract *GameReplayContractSession) GetGameReplay(_replayID string) (GameRoundReplay, error) {
	return _GameReplayContract.Contract.GetGameReplay(&_GameReplayContract.CallOpts, _replayID)
}

// GetGameReplay is a free data retrieval call binding the contract method 0xb9709948.
//
// Solidity: function getGameReplay(string _replayID) view returns((int64,uint64,string,bytes,string,string,(string,string,string,string),(string,uint64,int64)[]))
func (_GameReplayContract *GameReplayContractCallerSession) GetGameReplay(_replayID string) (GameRoundReplay, error) {
	return _GameReplayContract.Contract.GetGameReplay(&_GameReplayContract.CallOpts, _replayID)
}

// GetGameReplayByIndex is a free data retrieval call binding the contract method 0xe4175d2a.
//
// Solidity: function getGameReplayByIndex(uint256 _index) view returns((int64,uint64,string,bytes,string,string,(string,string,string,string),(string,uint64,int64)[]))
func (_GameReplayContract *GameReplayContractCaller) GetGameReplayByIndex(opts *bind.CallOpts, _index *big.Int) (GameRoundReplay, error) {
	var out []interface{}
	err := _GameReplayContract.contract.Call(opts, &out, "getGameReplayByIndex", _index)

	if err != nil {
		return *new(GameRoundReplay), err
	}

	out0 := *abi.ConvertType(out[0], new(GameRoundReplay)).(*GameRoundReplay)

	return out0, err

}

// GetGameReplayByIndex is a free data retrieval call binding the contract method 0xe4175d2a.
//
// Solidity: function getGameReplayByIndex(uint256 _index) view returns((int64,uint64,string,bytes,string,string,(string,string,string,string),(string,uint64,int64)[]))
func (_GameReplayContract *GameReplayContractSession) GetGameReplayByIndex(_index *big.Int) (GameRoundReplay, error) {
	return _GameReplayContract.Contract.GetGameReplayByIndex(&_GameReplayContract.CallOpts, _index)
}

// GetGameReplayByIndex is a free data retrieval call binding the contract method 0xe4175d2a.
//
// Solidity: function getGameReplayByIndex(uint256 _index) view returns((int64,uint64,string,bytes,string,string,(string,string,string,string),(string,uint64,int64)[]))
func (_GameReplayContract *GameReplayContractCallerSession) GetGameReplayByIndex(_index *big.Int) (GameRoundReplay, error) {
	return _GameReplayContract.Contract.GetGameReplayByIndex(&_GameReplayContract.CallOpts, _index)
}

// GetGameReplayLength is a free data retrieval call binding the contract method 0xeb05fd1d.
//
// Solidity: function getGameReplayLength() view returns(uint256)
func (_GameReplayContract *GameReplayContractCaller) GetGameReplayLength(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _GameReplayContract.contract.Call(opts, &out, "getGameReplayLength")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetGameReplayLength is a free data retrieval call binding the contract method 0xeb05fd1d.
//
// Solidity: function getGameReplayLength() view returns(uint256)
func (_GameReplayContract *GameReplayContractSession) GetGameReplayLength() (*big.Int, error) {
	return _GameReplayContract.Contract.GetGameReplayLength(&_GameReplayContract.CallOpts)
}

// GetGameReplayLength is a free data retrieval call binding the contract method 0xeb05fd1d.
//
// Solidity: function getGameReplayLength() view returns(uint256)
func (_GameReplayContract *GameReplayContractCallerSession) GetGameReplayLength() (*big.Int, error) {
	return _GameReplayContract.Contract.GetGameReplayLength(&_GameReplayContract.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_GameReplayContract *GameReplayContractCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _GameReplayContract.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_GameReplayContract *GameReplayContractSession) Owner() (common.Address, error) {
	return _GameReplayContract.Contract.Owner(&_GameReplayContract.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_GameReplayContract *GameReplayContractCallerSession) Owner() (common.Address, error) {
	return _GameReplayContract.Contract.Owner(&_GameReplayContract.CallOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_GameReplayContract *GameReplayContractTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _GameReplayContract.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_GameReplayContract *GameReplayContractSession) RenounceOwnership() (*types.Transaction, error) {
	return _GameReplayContract.Contract.RenounceOwnership(&_GameReplayContract.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_GameReplayContract *GameReplayContractTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _GameReplayContract.Contract.RenounceOwnership(&_GameReplayContract.TransactOpts)
}

// SaveGameReplay is a paid mutator transaction binding the contract method 0xc6616969.
//
// Solidity: function saveGameReplay((int64,uint64,string,bytes,string,string,(string,string,string,string),(string,uint64,int64)[])[] _replays) returns()
func (_GameReplayContract *GameReplayContractTransactor) SaveGameReplay(opts *bind.TransactOpts, _replays []GameRoundReplay) (*types.Transaction, error) {
	return _GameReplayContract.contract.Transact(opts, "saveGameReplay", _replays)
}

// SaveGameReplay is a paid mutator transaction binding the contract method 0xc6616969.
//
// Solidity: function saveGameReplay((int64,uint64,string,bytes,string,string,(string,string,string,string),(string,uint64,int64)[])[] _replays) returns()
func (_GameReplayContract *GameReplayContractSession) SaveGameReplay(_replays []GameRoundReplay) (*types.Transaction, error) {
	return _GameReplayContract.Contract.SaveGameReplay(&_GameReplayContract.TransactOpts, _replays)
}

// SaveGameReplay is a paid mutator transaction binding the contract method 0xc6616969.
//
// Solidity: function saveGameReplay((int64,uint64,string,bytes,string,string,(string,string,string,string),(string,uint64,int64)[])[] _replays) returns()
func (_GameReplayContract *GameReplayContractTransactorSession) SaveGameReplay(_replays []GameRoundReplay) (*types.Transaction, error) {
	return _GameReplayContract.Contract.SaveGameReplay(&_GameReplayContract.TransactOpts, _replays)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_GameReplayContract *GameReplayContractTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _GameReplayContract.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_GameReplayContract *GameReplayContractSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _GameReplayContract.Contract.TransferOwnership(&_GameReplayContract.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_GameReplayContract *GameReplayContractTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _GameReplayContract.Contract.TransferOwnership(&_GameReplayContract.TransactOpts, newOwner)
}

// GameReplayContractOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the GameReplayContract contract.
type GameReplayContractOwnershipTransferredIterator struct {
	Event *GameReplayContractOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *GameReplayContractOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(GameReplayContractOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(GameReplayContractOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *GameReplayContractOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *GameReplayContractOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// GameReplayContractOwnershipTransferred represents a OwnershipTransferred event raised by the GameReplayContract contract.
type GameReplayContractOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_GameReplayContract *GameReplayContractFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*GameReplayContractOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _GameReplayContract.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &GameReplayContractOwnershipTransferredIterator{contract: _GameReplayContract.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_GameReplayContract *GameReplayContractFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *GameReplayContractOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _GameReplayContract.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(GameReplayContractOwnershipTransferred)
				if err := _GameReplayContract.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_GameReplayContract *GameReplayContractFilterer) ParseOwnershipTransferred(log types.Log) (*GameReplayContractOwnershipTransferred, error) {
	event := new(GameReplayContractOwnershipTransferred)
	if err := _GameReplayContract.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
